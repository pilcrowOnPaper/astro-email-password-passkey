---
import { encodeBase64 } from "@oslojs/encoding";
import { createTOTPKeyURI } from "@oslojs/otp";
import { renderSVG } from "uqr";
import { get2FARedirect } from "@lib/server/2fa";

if (Astro.locals.user === null || Astro.locals.session === null) {
	return Astro.redirect("/login");
}
if (!Astro.locals.user.emailVerified) {
	return Astro.redirect("/verify-email");
}
if (Astro.locals.user.registeredTOTP && !Astro.locals.session.twoFactorVerified) {
	return Astro.redirect(get2FARedirect(Astro.locals.user));
}

const totpKey = new Uint8Array(20);
crypto.getRandomValues(totpKey);
const encodedTOTPKey = encodeBase64(totpKey);
const keyURI = createTOTPKeyURI("Demo", Astro.locals.user.username, totpKey, 30, 6);
const qrcode = renderSVG(keyURI);
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Set up two-factor authentication</title>
	</head>
	<body>
		<main>
			<h1>Set up two-factor authentication</h1>
			<div style="width:200px; height: 200px;" set:html={qrcode} />
			<form id="form-totp">
				<input name="key" value={encodedTOTPKey} hidden required />
				<label for="form-totp.code">Verify the code from the app</label>
				<input id="form-totp.code" name="code" required /><br />
				<button>Save</button>
				<p id="form-totp.message"></p>
			</form>
		</main>
	</body>
</html>

<script>
	const formElement = document.getElementById("form-totp") as HTMLFormElement;
	const formErrorElement = document.getElementById("form-totp.message") as HTMLElement;

	formElement.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(e.target as HTMLFormElement);
		const data = {
			key: formData.get("key"),
			code: formData.get("code")
		};
		const response = await fetch("/api/user/totp", {
			method: "POST",
			body: JSON.stringify(data)
		});
		if (response.ok) {
			window.location.href = "/";
		} else {
			formErrorElement.innerText = await response.text();
		}
	});
</script>
