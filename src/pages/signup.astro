---
import { get2FARedirect } from "@lib/2fa";

if (Astro.locals.session !== null && Astro.locals.user !== null) {
	if (!Astro.locals.user.emailVerified) {
		return Astro.redirect("/verify-email");
	}
	if (!Astro.locals.user.registeredTOTP) {
		return Astro.redirect("/2fa/totp/setup");
	}
	if (!Astro.locals.session.twoFactorVerified) {
		return Astro.redirect(get2FARedirect(Astro.locals.user));
	}
	return Astro.redirect("/");
}
---

<html>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Create an account</title>
	</head>
	<body>
		<main>
			<h1>Create an account</h1>
			<p>Your username must be at least 3 characters long and your password must be at least 8 characters long.</p>
			<form id="form-signup">
				<label for="form-signup.username">Username</label>
				<input id="form-signup.username" name="username" required /><br />
				<label for="form-signup.email">Email</label>
				<input type="email" id="form-signup.email" name="email" autocomplete="username" required /><br />
				<label for="form-signup.password">Password</label>
				<input type="password" id="form-signup.password" name="password" autocomplete="new-password" required /><br />
				<button>Continue</button>
				<p id="form-signup.message"></p>
			</form>
			<a href="/login">Sign in</a>
		</main>
	</body>
</html>

<script>
	const formElement = document.getElementById("form-signup")!;
	const formErrorElement = document.getElementById("form-signup.message")!;

	formElement.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(e.target as HTMLFormElement);
		const data = {
			email: formData.get("email"),
			username: formData.get("username"),
			password: formData.get("password")
		};
		const response = await fetch("/api/signup", {
			method: "POST",
			body: JSON.stringify(data)
		});
		if (response.ok) {
			window.location.href = "/verify-email";
		} else {
			formErrorElement.innerText = await response.text();
		}
	});
</script>
